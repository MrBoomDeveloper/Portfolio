@import "@components/variables";

@mixin border($color, $size) {
	filter:
		drop-shadow($size 0 0 $color)
		drop-shadow(0 $size 0 $color)
		drop-shadow(-#{$size} 0 0 $color)
		drop-shadow(0 -#{$size} 0 $color);
}

.highlight {
	font-family: $subtitle-font;
	font-weight: 500;
	font-size: 1.3em;
	color: #DA30FF;
	text-shadow: #DA30FF 0 0 1px;
}

.title {
	font-size: 3em;
	font-family: $title-font;
	font-weight: 700;
	text-shadow: rgba(200, 200, 200, .5) 0 0 2px;
}

.description {
	font-size: 1.2em;
	line-height: 1.6;
	max-width: 550px;
	font-family: $description-font;
	text-shadow: rgba(200, 200, 200, .25) 0 0 2px;
	color: $description-color;
	font-weight: 400;
	margin-bottom: .6rem;
}

.hero {
	position: relative;
	display: flex;
	justify-content: center;
	overflow: hidden;

	&Foxy {
		position: absolute;
		bottom: 0;
		height: 250px;
		left: 0;
		animation: foxyRunningAnimation 10s infinite;
	}

	@keyframes foxyRunningAnimation {
		from {
			translate: -5000px 0;
		}

		to {
			translate: 5000px 0;
		}
	}
	
	&Content {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		max-width: $responsibilityBreakpoint;
		gap: 1rem;
		width: 100%;
		margin-inline: 2rem;
		text-align: center;
		padding-top: 6rem;
		padding-bottom: 4rem;
		
		* {
			animation: fadeIn 1s;
		}
	}
}

@keyframes fadeIn {
	0% {
		opacity: 0;
		translate: 0 25px
	}
	
	100% {
		opacity: 1;
		translate: 0 0;
	}
}

@mixin squareAnimation($id, $fromRotate, $rotate) {
	@keyframes #{$id} {
		0% {
			opacity: 0;
			translate: 0 150%;
			rotate: $fromRotate;
		}
	
		25% {
			opacity: .02;
		}
	
		100% {
			opacity: .1;
			translate: 0 0;
			rotate: $rotate;
		}
	}
}

.backgroundAnimation {
	position: absolute;
	inset: 0;
	width: 100%;
	height: 100%;
	z-index: -1;
	background-image: radial-gradient(transparent 90%, rgba(255, 255, 255, .1) 100%);
	background-size: 20px 20px;
	
	@mixin square($size, $id, $duration, $fromRotate, $rotate) {
		border: solid rgba(240, 87, 255, .5) 5px;
		background-color: rgba(240, 87, 255, .2);
		opacity: .1;
		width: $size;
		height: $size;
		position: absolute;
		border-radius: 10px;
		rotate: $rotate;
		@include squareAnimation(squareAnimation#{$id}, $fromRotate, 0);
		animation: squareAnimation#{$id} $duration;
	}
	
	.square1 {
		@include square(125px, 1, 1s, 0deg, -300deg);
		left: 20%;
		top: 15%;
	}
	
	.square2 {
		@include square(120px, 2, 1.2s, -90deg, 10deg);
		right: 15%;
		bottom: 10%;
	}
	
	.square3 {
		@include square(200px, 3, 1.3s, 0deg, -100deg);
		left: 45%;
		bottom: 30%;
	}
	
	.square4 {
		@include square(175px, 4, 1s, -50deg, 200deg);
		left: 5%;
		bottom: 0%;
	}
	
	.square5 {
		@include square(110px, 5, 1.3s, 0deg, -300deg);
		top: 5%;
		right: 10%;
	}
}

.actions {
	display: flex;
	gap: .8rem;
}

@media (orientation: landscape) {
	.freddy {
		height: 15rem;
		position: absolute;
		bottom: 0;
		right: 0;
	}

	@media (min-width: $responsibilityBreakpoint) {
		.hero {
			min-height: 75vh;
		}
	}
}

@media (max-width: $responsibilityBreakpoint) {
	.heroContent {
		padding-inline: 2rem;
		padding-block: 6rem;
		min-height: 75vh;
	}
}

@media (max-width: $responsibilityBreakpoint) and (orientation: portrait) {
	.actions {
		flex-direction: column;
		gap: .5rem;

		& > * > * {
			width: 10rem;
		}
	}
	
	.freddy {
		position: absolute;
		height: 100%;
		opacity: .25;
		z-index: -1;
	}
}